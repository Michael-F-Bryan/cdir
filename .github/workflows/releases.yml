name: Releases

on:
  schedule:
    #- cron: '0 0 * * *' # midnight UTC
  - cron: '0/5 * * * *' # midnight UTC
  workflow_dispatch:  # Lets us trigger the build manually if desired

env:
  RUST_LOG: debug

jobs:
  # Check to see whether there have been any commits since the last run,
  # letting us skip subsequent steps if there haven't.
  # https://github.community/t/trigger-action-on-schedule-only-if-there-are-changes-to-the-branch/17887
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: print latest_commit
        run: echo ${{ github.sha }}
      - id: should_run
        continue-on-error: true
        name: Check for recent changes
        if: ${{ github.event_name == 'schedule' }}
        run: |
          # We want to re-run if the nightly tag doesn't already exist (which
          # causes git rev-list to fail) or when there are commits which are
          # accessible from this commit but not already under the nightly tag

          commits_since_last_nightly=$(git rev-list ${{ github.sha }} '^nightly')

          if [ $? -eq 0 -a -z "$commits_since_last_nightly" ]; then
            echo "::set-output name=should_run::false"
          fi

  build:
    strategy:
      matrix:
        os:
          - ubuntu
          - windows
          - macos
    runs-on: ${{ matrix.os }}-latest
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    needs:
      - check_date
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
    - name: Initialize the Rust Toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    - name: Generate Release Bundle
      uses: actions-rs/cargo@v1
      with:
        command: xtask
        args: dist
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: bundle-${{ runner.os }}
        path: "target/cdir.*.zip"

  create-release:
    name: Create Nightly Release
    runs-on: ubuntu-latest
    needs:
      - build
      - check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Fetch Pre-Compiled Binaries
        uses: actions/download-artifact@v2
        with:
          path: public
      - name: Move all up
        run: mv public/**/* public/
      - name: Print Artifacts
        run: ls -la public
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: github.ref == 'refs/heads/master'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "nightly"
          prerelease: true
          title: "Nightly Release"
          files: |
            public/*.zip
